<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".txt" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="C:\users\ctimmons\documents\Data\Dev\Visual Studio\CSharp\cs_utilities\Utilities.Core\bin\Debug\Utilities.Core.dll" #>
<#@ assembly name="C:\users\ctimmons\documents\Data\Dev\Visual Studio\CSharp\cs_utilities\Utilities.Sql\bin\Debug\Utilities.Sql.dll" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="Utilities.Core" #>
<#@ import namespace="Utilities.Sql.SqlServer" #>
<#@ include file="..\T4_Utilities\SQL Generator Utilities.ttinclude" #>
<#@ include file="Utilities.ttinclude" #>
<#@ include file="Entity Classes.ttinclude" #>
<#@ include file="Data Access Classes.ttinclude" #>
<#@ include file="Data Access - Select Method.ttinclude" #>
<#@ include file="Data Access - Insert Method.ttinclude" #>
<#@ include file="Data Access - Update Method.ttinclude" #>
<#@ include file="Data Access - Merge Method.ttinclude" #>
<#@ include file="Data Access - Delete Method.ttinclude" #>
<#@ include file="Data Access - Stored Procedure - Multiple Result Sets.ttinclude" #>
<#@ include file="Data Access - Stored Procedure - Single Result Set.ttinclude" #>
<#@ include file="Data Access - Stored Procedure - No Result Set.ttinclude" #>
<#

using (var connection = new SqlConnection("Data Source=(local);Initial Catalog=mvc_custom_controls;Integrated Security=true;"))
{
  connection.Open();

  var configuration =
    new Configuration()
    {
      Connection = connection,
      XmlSystem = XmlSystem.NonLinq_XmlDocument,
      TargetLanguage = TargetLanguage.CSharp_Latest,
      XmlValidationLocation = XmlValidationLocation.PropertySetter
    };
    
  var outputDirectory = Path.Combine(Path.GetDirectoryName(this.Host.ResolvePath(".")), "Output");
  var server = new Server(configuration);
  var databaseNames = new List<String>() { "mvc_custom_controls" };
  var databases =
    server
    .Databases
    .Where(db => databaseNames.ContainsCI(db.Name))
    .OrderBy(db => db.Name);
  
  //var adventureWorks2012 = databases.GetByName("AdventureWorks2012");
  
  //adventureWorks2012.AddStoredProcedure("dbo.uspGetManagerEmployees", new SqlParameter() { ParameterName = "@BusinessEntityID", SqlDbType = SqlDbType.Int, Value = -1 });
 
  this.GenerateEntityClasses(databases, outputDirectory);
  this.GenerateDataAccessClasses(databases, outputDirectory);
}

#>